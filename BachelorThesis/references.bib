@book{abrial1996b,
  author    = {Abrial, Jean-Raymond},
  title     = {The {B}-Book: Assigning Programs to Meanings},
  year      = 1996,
  publisher = {Cambridge University Press},
  address   = {New York, NY, USA}
}

@book{abrial2010modeling,
  author    = {Abrial, Jean-Raymond},
  title     = {Modeling in {Event}-{B}: System and Software Engineering},
  year      = 2010,
  publisher = {Cambridge University Press},
  address   = {New York, NY, USA}
}

@book{carlsson1988sicstus,
  author    = {Carlsson, Mats and Widen, Johan and Andersson, Johan and Andersson, Stefan and Boortz, Kent and Nilsson, Hans and Sj{\"o}land, Thomas},
  title     = {{SICStus} Prolog User's Manual},
  year      = 1988,
  volume    = 3,
  publisher = {Swedish Institute of Computer Science},
  address   = {Kista, Sweden},
  number    = 1
}

@misc{sicstusdoc,
  author       = {Mats Carlsson et al.},
  howpublished = {RISE Research Institutes of Sweden AB},
  title        = {SICStus Prolog User’s Manual},
  year         = {2023},
  month        = {December}
}

@article{leuschel2008prob,
  title     = {ProB: an automated analysis toolset for the B method},
  author    = {Leuschel, Michael and Butler, Michael},
  journal   = {International Journal on Software Tools for Technology Transfer},
  volume    = {10},
  pages     = {185--203},
  year      = {2008},
  publisher = {Springer}
}

@inproceedings{leuschel2003prob,
  title        = {ProB: A model checker for B},
  author       = {Leuschel, Michael and Butler, Michael},
  booktitle    = {FME 2003: Formal Methods: International Symposium of Formal Methods Europe, Pisa, Italy, September 8-14, 2003. Proceedings},
  pages        = {855--874},
  year         = {2003},
  organization = {Springer}
}

@inproceedings{10.1007/978-3-540-78800-3_24,
  author    = {de Moura, Leonardo
               and Bj{\o}rner, Nikolaj},
  editor    = {Ramakrishnan, C. R.
               and Rehof, Jakob},
  title     = {Z3: An Efficient SMT Solver},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
  year      = {2008},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {337--340},
  abstract  = {Satisfiability Modulo Theories (SMT) problem is a decision problem for logical first order formulas with respect to combinations of background theories such as: arithmetic, bit-vectors, arrays, and uninterpreted functions. Z3 is a new and efficient SMT Solver freely available from Microsoft Research. It is used in various software verification and analysis applications.},
  isbn      = {978-3-540-78800-3}
}

@inproceedings{10.1007/978-3-031-65627-9_2,
  author    = {Bj{\o}rner, Nikolaj
               and Nachmanson, Lev},
  editor    = {Gurfinkel, Arie
               and Ganesh, Vijay},
  title     = {Arithmetic Solving in Z3},
  booktitle = {Computer Aided Verification},
  year      = {2024},
  publisher = {Springer Nature Switzerland},
  address   = {Cham},
  pages     = {26--41},
  abstract  = {The theory of arithmetic is integral to many uses of SMT solvers. Z3 has implemented native solvers for arithmetic reasoning since its first release. We present a full re-implementation of Z3's original arithmetic solver. It is based on substantial experiences from user feedback, engineering and experimentation. While providing a comprehensive overview of the main components we emphasize selected new insights we arrived at while developing and testing the solver.},
  isbn      = {978-3-031-65627-9}
}

@misc{z3prover-github,
  author = {Microsoft-Research},
  title  = {GitHub - Z3Prover/z3: The Z3 Theorem Prover},
  year   = {2015}
}

@inproceedings{10.1007/978-3-319-33693-0_23,
  author    = {Krings, Sebastian
               and Leuschel, Michael},
  editor    = {{\'A}brah{\'a}m, Erika
               and Huisman, Marieke},
  title     = {SMT Solvers for Validation of B and Event-B Models},
  booktitle = {Integrated Formal Methods},
  year      = {2016},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {361--375},
  abstract  = {We present an integration of the constraint solving kernel of the ProB model checker with the SMT solver Z3. We apply the combined solver to B and Event-B predicates, featuring higher-order datatypes and constructs like set comprehensions. To do so we rely on the finite set logic of Z3 and provide a new translation from B to Z3, better suited for constraint solving. Predicates can then be solved by the two solvers working hand in hand: constraints are set up in both solvers simultaneously and (intermediate) results are transferred. We thus combine a constraint logic programming based solver with a DPLL(T) based solver into a single procedure. The improved constraint solver finds application in many validation tasks, from animation of implicit specifications, to test case generation, bounded and symbolic model checking on to disproving of proof obligations. We conclude with an empirical evaluation of our approach focusing on two dimensions: comparing low and high-level encodings of B as well as comparing pure ProB to ProB combined with Z3.},
  isbn      = {978-3-319-33693-0}
}

@book{hintjens2013zeromq,
  title     = {ZeroMQ: Messaging for Many Applications},
  author    = {Hintjens, P},
  year      = {2013},
  publisher = {O'Reilly Media}
}

@book{sustrik2015zeromq,
  title     = {The Architecture of Open Source Applications (Volume 2) ZeroMQ},
  author    = {S{\'u}strik, Martin and others},
  editor    = {Brown, Amy and Wilson, Greg},
  booktitle = {The Architecture of Open Source Applications, Volume II},
  pages     = {359--372},
  year      = {2012}
}

@inproceedings{torlak2007kodkod,
  title        = {Kodkod: A relational model finder},
  author       = {Torlak, Emina and Jackson, Daniel},
  booktitle    = {International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
  pages        = {632--647},
  year         = {2007},
  organization = {Springer}
}

@article{codognet1996compiling,
  title     = {Compiling constraints in clp (FD)},
  author    = {Codognet, Philippe and Diaz, Daniel},
  journal   = {The Journal of Logic Programming},
  volume    = {27},
  number    = {3},
  pages     = {185--226},
  year      = {1996},
  publisher = {Elsevier}
}

@inproceedings{10.1007/978-3-031-25803-9_5,
  author    = {K{\"o}rner, Philipp
               and Leuschel, Michael},
  editor    = {Lal, Akash
               and Tonetta, Stefano},
  title     = {Towards Practical Partial Order Reduction for High-Level Formalisms},
  booktitle = {Verified Software. Theories, Tools and Experiments.},
  year      = {2023},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {72--91},
  chapter   = {5},
  abstract  = {Partial order reduction (POR) has considerable potential to reduce the state space during model checking by exploiting independence between transitions. This potential remains, however, largely unfulfilled for high-level formalisms such as B or TLA{\$}{\$}^{\{}+{\}}{\$}{\$}. In this article, we report on our experiments regarding POR: We empirically assess that our current implementation of POR in ProB does not have any impact for a vast majority of B machines. We then analyse why POR fails to achieve reductions and identify minimal examples without reduction that make use of high-level constructs in B, and provide several new ideas to make POR pay off for more complex formal models. A proof-of-concept implementation then yields two orders of magnitude reduction in the state space for a particularly challenging case study, a railway interlocking model that escaped our POR techniques thus far.},
  isbn      = {978-3-031-25803-9}
}

@article{stallman1988debugging,
  title   = {Debugging with GDB},
  author  = {Stallman, Richard and Pesch, Roland and Shebs, Stan and others},
  journal = {Free Software Foundation},
  volume  = {675},
  year    = {1988}
}